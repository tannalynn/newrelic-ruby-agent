name: Test test

on: push

jobs:
  build_ruby:
    runs-on: ubuntu-latest
    strategy: 
      matrix: 
        ruby-version: [ "2.1.10" ]
    steps:
      - uses: actions/checkout@v2

      - uses: actions/cache@v2
        id: ruby-cache
        with:
          path: ~/.rubies/ruby-${{ matrix.ruby-version }}
          key: v5-ruby-cache-${{ matrix.ruby-version }}
          restore-keys: |
            v5-ruby-cache-${{ matrix.ruby-version }}

      - name: Build Ruby ${{ matrix.ruby-version }}
        id: build-ruby
        uses: ./.github/actions/build-ruby
        with:
          ruby-version: ${{ matrix.ruby-version }}

  multiverse_test:
    needs: build_ruby
    runs-on: ubuntu-latest
    services:
      # Label used to access the service container
      redis:
        # Docker Hub image
        image: redis
        # Set health checks to wait until redis has started
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps port 6379 on service container to the host
          - 6379:6379
      mongodb:
        image: mongo
        ports:
          - 27017:27017
      rabbitmq:
        image: rabbitmq:latest
        ports:
          - 5672:5672
        options: --health-cmd "rabbitmqctl node_health_check" --health-interval 10s --health-timeout 5s --health-retries 5
      memcached:
        image: memcached:latest
        ports:
          - 11211:11211
        options: --health-cmd "timeout 5 bash -c 'cat < /dev/null > /dev/udp/127.0.0.1/11211'" --health-interval 10s --health-timeout 5s --health-retries 5
    strategy:
      fail-fast: false
      matrix:
        ruby-version: [ "2.1.10" ]
        # ruby-version: [ "2.0.0-p648", "2.1.10", "2.2.10", "2.3.8" ]
    steps:
      - uses: actions/checkout@v2

      - uses: actions/cache@v2
        id: ruby-cache
        with:
          path: ~/.rubies/ruby-${{ matrix.ruby-version }}
          key: v6-ruby-cache-${{ matrix.ruby-version }}
          restore-keys: |
            v6-ruby-cache-${{ matrix.ruby-version }}

      - name: Build Ruby ${{ matrix.ruby-version }}
        id: build-ruby
        uses: ./.github/actions/build-ruby
        with:
          ruby-version: ${{ matrix.ruby-version }}
          dependencies: libcurl4-nss-dev build-essential libsasl2-dev libxslt1-dev libxml2-dev libc6-dev tree

      - name: Bundler install
        run: bundle install


      - run: gem install nokogiri -v '1.9.1'
      - if: ${{ always() }}
        run: cat  /home/runner/.rubies/ruby-2.1.10/lib/ruby/gems/2.1.0/extensions/x86_64-linux/2.1.0/nokogiri-1.9.1/mkmf.log 
      - if: ${{ always() }}
        run: cat /home/runner/.rubies/ruby-2.1.10/lib/ruby/gems/2.1.0/gems/nokogiri-1.9.1/ext/nokogiri/tmp/x86_64-pc-linux-gnu/ports/libxml2/2.9.8/libxml2-2.9.8/config.log
      - if: ${{ always() }}
        run: tree /home/runner/.rubies/ruby-2.1.10/openssl